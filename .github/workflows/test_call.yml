name: calling a workflow

run-name: ${{ github.actor }} is calling

on:
    workflow_dispatch:
        inputs:
            name:
                default: "John Doe"
                required: true
                type: string

            place:
                required: false
                type: choice
                options:
                  - "New York"
                  - "Old York"
                  - "ZOO York"
                  - "All"

jobs:
    init_j:
        runs-on: ubuntu-latest

        steps:
          - name: Just Init
            run: |
                echo "Initilialization ..."

    prepare_strategy_matrix:
      runs-on: ubuntu-latest


      outputs:
        matrix_input: ${{ steps.final_prepare.outputs.prepared_matrix }}
        test_output: ${{ steps.test_result.outputs.test_output }}

      steps:
        - name: Prepared Input for All
          id: prepare_input_all
          if: ${{ inputs.place == 'All' }}
          run: |
            echo "PREPARED_MATRIX={\"include\":[{\"place\": \"New York\"},{\"place\": \"Old York\"},{\"place\": \"ZOO York\"}]}" >> $GITHUB_ENV
        
        - name: Prepared Input for One
          id: prepare_input_one
          if: ${{ inputs.place != 'All' }}
          run: |
            echo "PREPARED_MATRIX={\"include\":[{\"place\": \"${{ inputs.place }}\"}]}" >> $GITHUB_ENV

        - name: Check and Create Output
          id: final_prepare
          run: |
            echo ${{ env.PREPARED_MATRIX }}
            echo "prepared_matrix=${{ toJson(env.PREPARED_MATRIX) }}" >> $GITHUB_OUTPUT

        - name: test
          id: test_step
          run: |
            # echo "test_output={\"include\":[{\"place\": \"New York\"},{\"place\": \"Old York\"},{\"place\": \"ZOO York\"}]}" >> $GITHUB_OUTPUT
            echo "test_output={\"include\":[{\"place\": \"${{ inputs.place }}\"}]}" >> $GITHUB_OUTPUT

        - name: test_result
          id: test_result
          run: |
            if [ ${{ steps.prepare_input_all.outcome}} == 'success' ]
            then
              echo "AAAAAAAAAAAAAAAAALLLLLLLLLLLLLLLLLLLLLL"
              echo "test_output={\"include\":[{\"place\": \"New York\"},{\"place\": \"Old York\"},{\"place\": \"ZOO York\"}]}" >> $GITHUB_OUTPUT

            elif [ ${{ steps.prepare_input_one.outcome}} == 'success' ]; then
              echo "OOOOOOOOOOOONNNNNNNNEEEEEEE"
              echo "test_output={\"include\":[{\"place\": \"${{ inputs.place }}\"}]}" >> $GITHUB_OUTPUT
            else
              echo "BLLLLLLLEEEEEEEEEEEEEEEEEEEEE"              
            fi
          shell: bash

    work_with_input:
      runs-on: ubuntu-latest
      needs: [ prepare_strategy_matrix ]

      strategy:
        matrix: ${{ fromJson(needs.prepare_strategy_matrix.outputs.test_output) }}

      steps:
        - name: Checkout Repo
          uses: actions/checkout@v3

        - name: Setup Python
          uses: actions/setup-python@v4
          with:
            python-version: 3.9

        - name: Run Python Script
          run: |
            python ./scripts/greetings.py --name '${{ inputs.name }}' --place '${{ matrix.place }}'
