name: calling a workflow

run-name: ${{ github.actor }} is calling

on:
    workflow_dispatch:
        inputs:
            name:
                default: "John Doe"
                required: true
                type: string

            place:
                required: false
                type: choice
                options:
                  - "New York"
                  - "Old York"
                  - "ZOO York"
                  - "All"

jobs:
    init_j:
        runs-on: ubuntu-latest

        steps:
          - name: Just Init
            run: |
                echo "Initilialization ..."

    # prepare_input:
    #   runs-on: ubuntu-latest

    #   outputs:
    #     matrix_input: ${{ steps.prepare_input.outputs.prepared_matrix }}

      # steps:
      #   - name: Prepared Input
      #     id: prepare_input
      #     run: |
      #       if [[ "${{ inputs.place }}" != "All" ]]
      #       then 
      #         echo "prepared_matrix={\"include\":[{\"place\": ${{ inputs.place }} }]}" >> $GITHUB_OUTPUT
      #       else
      #         echo "prepared_matrix={\"include\":[{\"place\": \"New York\"},{\"place\": \"Old York\"},{\"place\": \"ZOO York\"}]}" >> $GITHUB_OUTPUT
      #       fi

    prepare_all:
      runs-on: ubuntu-latest

      if: ${{ inputs.place == 'All' }}

      outputs:
        matrix_input: ${{ steps.prepare_input.outputs.prepared_matrix }}

      steps:
        - name: Prepared Input
          id: prepare_input
          run: |
            echo "prepared_matrix={\"include\":[{\"place\": \"New York\"},{\"place\": \"Old York\"},{\"place\": \"ZOO York\"}]}" >> $GITHUB_OUTPUT

        - name: Check Output
          run: |
            echo ${{ steps.prepare_input.outputs.prepared_matrix }}

    prepare_one:
      runs-on: ubuntu-latest

      if: ${{ inputs.place != 'All' }}

      outputs:
        matrix_input: ${{ steps.prepare_input.outputs.prepared_matrix }}
      
      steps:
        - name: Prepared Input
          id: prepare_input
          run: |
            echo "prepared_matrix={\"include\":[{\"place\": ${{ inputs.place }} }]}" >> $GITHUB_OUTPUT

        - name: Check Output
          run: |
            echo ${{ steps.prepare_input.outputs.prepared_matrix }}

    prepare_output:
      runs-on: ubuntu-latest

      needs: [ init_j, prepare_all, prepare_one ]

      if: |
        always() &&
        ( needs.prepare_all.result == 'success' || needs.prepare_all.result == 'skipped') &&
        ( needs.prepare_one.result == 'success' || needs.prepare_one.result == 'skipped' ) 
      
      outputs:
        matrix_input: ${{ fromJson(steps.choose_result.outputs.matrix_input) }}

      steps:
        - name: Choose result
          id: choose_result
          run: |
            if [ ${{ needs.prepare_one.result == 'success' }} ]
            then
              echo "matrix_input=${{ needs.prepare_one.outputs.matrix_input }}" >> $GITHUB_OUTPUT
            else
              echo "matrix_input=${{ needs.prepare_all.outputs.matrix_input }}" >> $GITHUB_OUTPUT
            fi
          shell: bash

        - name: Output check
          run: |
            echo ${{ steps.choose_result.outputs.matrix_input }}

    work_with_input:
        runs-on: ubuntu-latest
        needs: [ prepare_output ]

        strategy:
          matrix: ${{ needs.prepare_output.outputs.matrix_input }}

        steps:
          - name: Checkout Repo
            uses: actions/checkout@v3

          - name: Setup Python
            uses: actions/setup-python@v4
            with:
                python-version: 3.9

          - name: Run Python Script
            run: |
                python ./scripts/greetings.py --name '${{ inputs.name }}' --place '${{ matrix.place }}'
