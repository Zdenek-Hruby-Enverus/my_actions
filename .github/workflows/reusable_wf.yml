name: Reusable Workflow

on:
  workflow_call:
    # Map the workflow outputs to job outputs
    outputs:
      job_environment:
        description: "The first output string"
        value: ${{ jobs.check-matrix-first.outputs.job_environment }}
    
    inputs:
      dbx-env:
        required: true
        type: string

env:
  PROD: "prodprod"
  DEV: "devdev"

jobs:
  setup-github-envs:
    runs-on: ubuntu-latest
    steps:
        - name: Setup Envs
          run: |
            if [ ${{ inputs.dbx-env == 'prod' }} ]
            then 
              echo "COSI=${{ env.PROD }}" >> $GITHUB_ENV
              echo "COSI2=${{ env.PROD}}_prod" >> $GITHUB_ENV
            else [ ${{ inputs.dbx-env == 'dev' }} ]
              echo "COSI=${{ env.DEV }}" >> $GITHUB_ENV
              echo "COSI2=${{ env.DEV}}_dev" >> $GITHUB_ENV
            fi
          shell: bash

        - name: Sleep
          run:
            sleep 60

        - name: Print Github Envs
          run: |
            echo ${{ env.COSI }}
            echo ${{ env.COSI2 }}

  check-matrix-first:
    runs-on: ubuntu-latest

    needs: [ setup-github-envs ]

    outputs:
        job_environment: ${{ steps.check-env-vars.outputs.job-env }}
      
    env:
      MYHOST: ${{ inputs.host }}
      MYTOKEN: ${{ inputs.token }}
     
    steps:
      - name: Check Env Vars
        id: check-env-vars
        run: |
          echo "HOST is ${{ env.MYHOST }}"
          echo "TOKEN is ${{ env.MYTOKEN }}"
          echo "job-env=${{ env.MYHOST }}" >> $GITHUB_OUTPUT

      - name: easy echo
        run: |
          echo ${{ env.COSI }}