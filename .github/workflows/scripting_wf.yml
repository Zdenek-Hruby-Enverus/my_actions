name: scripting workflow

run-name: WF is calling ${{ inputs.folder }}/${{ inputs.file }} run by ${{ github.actor }}

on:
#  pull_request:
#    branches: [ "main", "dev" ]

  workflow_dispatch:
      inputs:
        folder:
          type: choice
          required: true
          options:
            - scripts_zone
            - scripts2_zone

        file:
          type: choice
          required: true
          options:
            - test.py
            - test2.py

        capitalize_name:
          type: boolean
          required: false
          default: false

        nelf:
          type: string
          required: false
          default: ""

        wolf:
          type: string
          required: false
          default: ""

jobs:
    init_job:
        runs-on: ubuntu-latest
        outputs:
          model_name: ${{ steps.define_model.outputs.model_name }}
        steps:
          - name: Easy Print
            run: |
              echo "Nelf ${{ inputs.nelf }}"
              echo "Wolf ${{ inputs.wolf }}"

          - name: Define Model
            id: define_model
            run: |
              echo "model_name=MODELTYPE_${{ inputs.nelf }}_MODELTYPE" >> GITHUB_OUTPUT

          - name: INIT
            run: |
              echo "Models to process:"

              MODEL_NAME=${{ steps.outputs.model_name }}
              if [[ -n "${{ github.event.inputs.nelf }}" ]]; then
                echo "Nelf is ${MODEL_NAME/MODELTYPE/NELF}"
              fi

              if [[ -n "${{ github.event.inputs.wolf }}" ]]; then
                echo "Nelf is ${MODEL_NAME/MODELTYPE/WOLF}"
              fi

    build:
        runs-on: ubuntu-latest

        if: ${{ always() && ( github.event_name == 'pull_request' ) || github.event_name == 'workflow_dispatch' }}

        outputs:
            notebooks: ${{ steps.get_chenged_files.outputs.ntbs }}
            change_exists: ${{ steps.get_chenged_files.outputs.change_exists }}

        steps:
            - name: Checkout repo
              uses: actions/checkout@v3

            - name: Check Diff
              run: |
                git fetch origin main
                echo $(git diff origin/main)

            - name: Prepare Input
              id: prepare_input
              if: ${{ github.event_name == 'workflow_dispatch' }}
              run: |
                folder=${{ inputs.folder }}
                folder_to_path="${folder/_//}"
                file_name=${{ inputs.file }}
                if [[ ${{ inputs.capitalize_name }} == true ]]; then
                  file_name=${file_name^^}
                fi
                echo "file_path=${folder_to_path}/${file_name}" >> $GITHUB_OUTPUT
              shell: bash

            - name: Check Input
              if: ${{ github.event_name == 'workflow_dispatch' }}
              run: |
                echo ${{ steps.prepare_input.outputs.file_path }}

            - name: Get changed files
              id: get_chenged_files
              run: |
                if [[ ${{ github.event_name }}  == 'pull_request' ]]; then
                  modified_files=$(git diff --name-only  --diff-filter=ACMR origin/main..HEAD -- ./scripts \
                  | grep \.py | sort -u | \
                  while IFS= read -r n; do echo "\"$n\""; done )
                  output_str=`echo $(echo ${modified_files[@]}) | tr ' ' ','`
                  echo "PR!"
                  echo "${output_str}"
                  file_exists=true
                elif [[ ${{ github.event_name }} == 'workflow_dispatch' ]]; then
                  output_str=`echo "\"${{ steps.prepare_input.outputs.file_path }}\""`
                  echo "DISPATCH!"
                  echo "${output_str}"
                  if [ -f ${{ steps.prepare_input.outputs.file_path }} ]; then
                    file_exists=true
                  else
                    file_exists=false
                  fi
                fi

                echo "CHECK!!!!!!!!!!!!!!!!!!"
                echo "$( ${output[0]} )"

                if [[ ${output_str[0]} -eq '' ]]; then
                    echo "change_exists=false" >> $GITHUB_OUTPUT
                    echo "EXISTS FALSE"
                elif [ "$file_exists" == true ]; then
                    echo "EXISTS TRUE"
                    echo "change_exists=true" >> $GITHUB_OUTPUT
                else
                    echo "change_exists=false" >> $GITHUB_OUTPUT
                    echo "File does not exist!"
                fi

                echo "ntbs=[${output_str}]" >> $GITHUB_OUTPUT

                echo "${output_str[@]} added"

            - name: Check Output
              id: check_output
              run: |
                echo "Cechking output ..."
                echo ${{ steps.get_chenged_files.outputs.ntbs }}

    # build_dispatch:
    #     runs-on: ubuntu-latest

    #     if: ${{ github.event_name == 'workflow_dispatch' }}

    #     outputs:
    #         notebooks: ${{ steps.get_output.outputs.ntbs }}

    #     steps:
    #         - name: Get Output
    #           id: get_output
    #           run: |
    #             echo "ntbs=\"${{ inputs.script_path }}\"" >> $GITHUB_OUTPUT

    #         - name: Check Output
    #           id: check_output
    #           run: |
    #             echo ${{ steps.get_output.outputs.ntbs }}

    deploy:
        runs-on: ubuntu-latest

        needs: [ build ]

        if: ${{ always() && ( fromJson( needs.build.outputs.change_exists ) ) }}

        strategy:
            matrix:
              ntb: ${{ fromJson( needs.build.outputs.notebooks ) }}

        steps:
            - name: Checkout repo
              uses: actions/checkout@v3
    
            - name: Set up Python 3.9
              uses: actions/setup-python@v2
              with:
                python-version: "3.9"
        
            - name: Run Changed Scripts
              id: run_scripts
              run: |
                python ${{ matrix.ntb }}
