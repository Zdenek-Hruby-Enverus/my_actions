name: scripting workflow

run-name: ${{ github.actor }} is calling

on:
    pull_request:
      branches: [ "main" ]

    workflow_dispatch:
        inputs:
            script_path:
                type: string
                required: true

jobs:
    # find_script:
    #     runs-on: ubuntu-latest

    #     steps:
    #         - name:

    build:
        runs-on: ubuntu-latest

        if: ${{ github.event_name != 'workflow_dispatch' }}

        outputs:
            notebooks: ${{ steps.get_chenged_files.outputs.ntbs }}
            change_exists: ${{ steps.get_chenged_files.outputs.change_exists }}

        steps:
            - name: Checkout repo
              uses: actions/checkout@v3

            - name: Check Diff
              run: |
                git fetch origin main
                echo $(git diff origin/main)

            - name: Get changed files
              id: get_chenged_files
              run: |
                git fetch origin main
                modified_files=$(git diff --name-only  --diff-filter=ACMR origin/main..HEAD -- ./scripts | grep \.py | sort -u | while IFS= read -r n; do echo "\"$n\""; done)
                packages=`echo $(echo ${modified_files[@]}) | tr ' ' ','`
                echo $packages
                if [ ${packages[0]} != '' ]; then
                    echo "change_exists=true" >> $GITHUB_OUTPUT
                else
                    echo "change_exists=false" >> $GITHUB_OUTPUT
                fi

                echo "ntbs=[${packages}]" >> $GITHUB_OUTPUT

            - name: Check Output
              id: check_output
              run: |
                echo "Cechking output ..."
                echo ${{ steps.get_chenged_files.outputs.ntbs }}
                echo "Checking output json ..."
                echo ${{ fromJson( steps.get_chenged_files.outputs.ntbs ) }}

    build_dispatch:
        runs-on: ubuntu-latest

        if: ${{ github.event_name == 'workflow_dispatch' }}

        outputs:
            notebooks: ${{ steps.get_output.outputs.ntbs }}

        steps:
            - name: Get Output
              id: get_output
              run: |
                echo "ntbs=[\"${{ inputs.script_path }}\"]" >> $GITHUB_OUTPUT

            - name: Check Output
              id: check_output
              run: |
                echo ${{ steps.get_output.outputs.ntbs }}
                echo "Checking json ..."
                echo ${{ fromJson( steps.get_output.outputs.ntbs ) }}

    unify_outputs:
        runs-on: ubuntu-latest
        needs: [ build, build_dispatch ]

        if: ${{ always() }}

        outputs:
            notebooks: ${{ steps.unify_output.outputs.notebooks }}

        steps:
            - name: PR Output
              if: ${{ github.event_name == 'pull_request' }}
              run: |
                ntbs=(${{ needs.build.outputs.notebooks }})
                echo "$ntbs"
                echo "...................................."
                packages=`echo $(echo ${ntbs[@]})`
                echo "$packages"
                echo "...................................."
                echo "NTBS=[${packages}]" >> $GITHUB_ENV

            - name: Dispatch Output
              if: ${{ github.event_name == 'workflow_dispatch' }}
              run: |
                ntbs=(${{ needs.build_dispatch.outputs.notebooks }})
                packages=`echo $(echo ${ntbs[@]})`
                echo "NTBS=[${packages}]" >> $GITHUB_ENV

            - name: Unify Output
              id: unify_output
              run: |
                echo "notebooks=${{ env.NTBS }}" >> $GITHUB_OUTPUT

            - name: Check Output
              id: check_output
              run: |
                echo ${{ steps.unify_output.outputs.notebooks }}

            - name: Check Json
              run: |
                echo "Checking json ..."
                echo ${{ fromJson( steps.unify_output.outputs.notebooks ) }}

    deploy:
        runs-on: ubuntu-latest

        needs: [ unify_outputs ]

        if: ${{ always() }}

        strategy:
            matrix:
                ntb: ${{ fromJson( needs.unify_outputs.outputs.notebooks ) }}

        steps:
            - name: Checkout repo
              uses: actions/checkout@v3
    
            - name: Set up Python 3.9
              uses: actions/setup-python@v2
              with:
                python-version: "3.9"
        
            - name: Run Changed Scripts
              id: run_scripts
              run: |
                python ${{ matrix.ntb }}
